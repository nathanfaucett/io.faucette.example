/*
 * This build file was auto generated by running the Gradle "init" task
 * by "nathan" at "8/27/16 12:12 PM" with Gradle 3.0
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: "java"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'me.trnl:github-release-gradle-plugin:0.1'
    }
}

apply plugin: "release"


group = "io.faucette.example"
version = "0.0.1"

description = "java example package"

targetCompatibility = "1.5"
sourceCompatibility = "1.5"


// In this section you declare where to find the dependencies of your project
repositories {
    // Use "jcenter" for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile "org.slf4j:slf4j-api:1.7.21"

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile "org.testng:testng:6.8.1" and add
    // "test.useTestNG()" to your build script.
    testCompile "junit:junit:4.12"
}

release {
    /* Let's check that everything is committed */
    doFirst {
        if (!project.git.status().isEmpty()) {
            throw new GradleException('You have uncommitted changes.')
        }
    }

    /* Ask user for a release version, suggesting some default variant. */
    version = { console.prompt(' > Please enter release version:', project.version) }
    tag = { "r$project.release.version" }
    commitMessage = { "Release $project.release.version" }
}
